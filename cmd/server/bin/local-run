#!/bin/bash
# set -x # Uncomment to debug
set -e
set -o pipefail

SCRIPT_FOLDER=$(dirname "${BASH_SOURCE[0]}")
PROJECT_ROOT=$(cd "${SCRIPT_FOLDER}/.." && pwd)

cd "${PROJECT_ROOT}"

DEPENDENCIES=(fake-deolhonafila)
if [ -n "${DEPENDENCIES}" ]; then
  docker-compose up -d "${DEPENDENCIES[@]}"
  function stopDockerCompose {
    docker-compose stop
  }
  trap stopDockerCompose EXIT

  if [[ " ${DEPENDENCIES[*]} " == *"fake-deolhonafila"* ]]; then
    FAKE_HOST="127.0.0.1"
    if [ -n "$(command -v docker-machine)" ]; then
      FAKE_HOST="$(docker-machine ip default)"
    fi
    FAKE_DEOLHONAFILA_PORT="$(docker-compose port fake-deolhonafila 8082 | sed -e 's|[\.0-9]*:||g')"
    export DEOLHONAFILA_ADDR="${FAKE_HOST}:${FAKE_DEOLHONAFILA_PORT}"
  fi
fi

export PATH="${PATH}:${SCRIPT_FOLDER}"

if [ -n "${DEPENDENCIES}" ]; then
  # For mac using coreutils from `brew install coreutils`
  if [ -z "$(command -v timeout)" ] && [ ! -z "$(command -v gtimeout)" ]; then
    ln -s "$(command -v gtimeout)" "${SCRIPT_FOLDER}/timeout"
  fi

  if [ ! -z "$(command -v timeout)" ]; then
    if [[ " ${DEPENDENCIES[*]} " == *"mysql"* ]]; then
      "${SCRIPT_FOLDER}/wait-for" "${DEOLHONAFILA_ADDR}" -t 60
    fi
  else
    echo "Neither timeout nor gtimeout (for mac via \`brew install coreutils\`) is available on PATH. Running without waiting for dependencies to be up..."
  fi
fi

echo "Starting server..."
go run main.go
